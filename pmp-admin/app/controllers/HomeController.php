<?php

/**
 * Created by IntelliJ IDEA.
 * User: khalil
 * Date: 15/02/2017
 * Time: 21:11
 */


class HomeController extends \app\core\BaseController
{
    private $utilsateurModel;
    private $utilsateurdebugModel;
    public $error;
    //private $utils;


    public function __construct()
    {
        parent::__construct();

        $this->utilsateurModel = $this->model('UtilisateurModel');
        $this->utilsateurdebugModel = $this->model('UtilisateurdebugModel');
        //$this->utils  = new \app\core\Utils();

    }
    


    //Default Action
    public function index($id)
    {
        $data = array();
        //echo base64_decode($id[1]).'-'.base64_decode($id[2]); die;
        if(count($id) > 0) {
            if (base64_decode(htmlspecialchars($id[1])) === 'noOK') {
                $this->error = 1;
            }
            if (base64_decode(htmlspecialchars($id[1])) === 'KO') {
                $this->error = 2;
            }
            if (base64_decode(htmlspecialchars($id[1])) === 'NONO') {
                $this->error = 3;
            }
            if (base64_decode(htmlspecialchars($id[1])) === 'NONO2') {
                $this->error = 5;
            }
            if (base64_decode(htmlspecialchars($id[1])) === 'NOSIDE') {
                $this->error = 6;
            }
            if (base64_decode(htmlspecialchars($id[1])) === 'noOK2') {
                $this->error = 4;
            }
            /*if (base64_decode(htmlspecialchars($id[2])) === 1) {
                $data['tentitivesrestantes'] = 2;
            }
            if (base64_decode(htmlspecialchars($id[2])) === 2) {
                $data['tentitivesrestantes'] = 1;
            }
            if (base64_decode(htmlspecialchars($id[2])) === 3) {
                $data['tentitivesrestantes'] = 0;
            }*/

            $data['lang'] =  $this->lang->getLangFile(htmlspecialchars($id[0]));
            $data['langue'] = htmlspecialchars($id[0]) ;
        }
        else{
            $data['lang'] =  $this->lang->getLangFile('fr');
            $data['langue'] = htmlspecialchars('fr') ;
        }
        //echo $data['tentitivesrestantes'].'-'.base64_decode($id[2]); die;

        $token_id =  $this->utils->get_token_id();
        $token_value =  $this->utils->get_token();
        $data['token_id'] = $token_id ;
        $data['token_value'] = $token_value ;
        $params = array('view' => 'login');
        $this->view($params, $data);
    }

    public function testSMS($id){
        // Generated by curl-to-PHP: http://incarnate.github.io/curl-to-php/
        echo $this->utils->sendSMS22($sender="EdkCash", $id[0], "Merci de saisir ce code secrete: 56478878563 pour valider le rechargement de 20 000 F CFA");
        //echo $this->utils->sendSMS22($sender="EdkCash", '0022965590708', "Test SMS EdkCash Benin");

    }


   /* public function seConnecter($id)
    {
        $attempt_count = (int)@$_COOKIE['login_count'];

        $etatUser = $this->utilsateurModel->getEtatUserConnecter($this->utils->securite_xss($_POST['login']), $this->utils->securite_xss($_POST['password']));

        if ($etatUser === 1) {

            $objetconnection = $this->utilsateurModel->seConnecter($this->utils->securite_xss($_POST['login']), $this->utils->securite_xss($_POST['password']));

            if (!empty($objetconnection)) {
                if ($objetconnection[0]->connect == 0){

                    $data['user']['rowid']= $objetconnection[0]->rowid ;
                    $data['user']['password']= $objetconnection[0]->password ;

                    $params = array('view' => 'first-connect');
                    $this->view($params, $data);
                }
                elseif ($objetconnection[0]->connect == 1)
                {
                    if($objetconnection[0]->idtype_agence == 1)
                    {

                        $this->getSession()->setAttribut('OBJECT_CONNECTION', $objetconnection);
                        $this->rediriger('accueil', 'accueil');
                    }
                    else{
                        if (!empty($id))
                            $this->rediriger('home', 'index/' . $id[0] . '/' . base64_encode('NOSIDE').'/'.base64_encode($this->getSession()->getAttribut('tentatives')));
                        else
                            $this->rediriger('home', 'index/fr/' . base64_encode('NOSIDE').'/'.base64_encode($this->getSession()->getAttribut('tentatives')));
                    }
                }
            }
            else {
                if($attempt_count > 0){
                    setcookie('login_count', $attempt_count + 1, time()+(5*60));
                }
                else{
                    setcookie('login_count', 1, time()+(5*60));
                }
                if (!empty($id))
                    $this->rediriger('home', 'index/' . htmlspecialchars($id[0]) . '/' . base64_encode('noOK').'/'.base64_encode($attempt_count));
                else
                    $this->rediriger('home', 'index/fr/' . base64_encode('noOK').'/'.base64_encode($attempt_count));
            }
        }
        else {
            if($attempt_count > 0){
                setcookie('login_count', $attempt_count + 1, time()+(5*60));
            }
            else{
                setcookie('login_count', 1, time()+(5*60));
            }
            if (!empty($id))
                $this->rediriger('home', 'index/' . $id[0] . '/' . base64_encode('NONO').'/'.base64_encode($this->getSession()->getAttribut('tentatives')));
            else
                $this->rediriger('home', 'index/fr/' . base64_encode('NONO').'/'.base64_encode($this->getSession()->getAttribut('tentatives')));
        }
    }*/


    //Action de connexion
    public function seConnecter($id)
    {
        // Generate Token Id and Valid
        //$token_id = $this->utils->get_token_id();
        //$token_value = $this->utils->get_token($token_id);
        //echo $this->utils->check_valid('post'); die;
        //if($this->utils->check_valid('post')) {
        $attempt_count = (int)@$_COOKIE['login_count'];
        //$attempt_count = 1;
        /*if($attempt_count > 3){
            if (!empty($id))
                $this->rediriger('home', 'index/' . $id[0] . '/' . base64_encode('noOK2').'/'.base64_encode($attempt_count));
            else
                $this->rediriger('home', 'index/fr/' . base64_encode('noOK2').'/'.base64_encode($attempt_count));
        }
        else{*/
        $etatUser = $this->utilsateurModel->getEtatUserConnecter($this->utils->securite_xss($_POST['login']), $this->utils->securite_xss($_POST['password']));
        //var_dump($etatUser); exit;

            if ($etatUser === 1) {

                $objetconnection = $this->utilsateurModel->seConnecter($this->utils->securite_xss($_POST['login']), $this->utils->securite_xss($_POST['password']));
                //var_dump($objetconnection); die;
                if (!empty($objetconnection)) {
                    if($objetconnection[0]->idtype_agence == 1 || $objetconnection[0]->idtype_agence == 2){

                        $this->getSession()->setAttribut('OBJECT_CONNECTION', $objetconnection);
                        $this->rediriger('accueil', 'accueil');
                    }
                    else{
                        if (!empty($id))
                            $this->rediriger('home', 'index/' . $id[0] . '/' . base64_encode('NOSIDE').'/'.base64_encode($this->getSession()->getAttribut('tentatives')));
                        else
                            $this->rediriger('home', 'index/fr/' . base64_encode('NOSIDE').'/'.base64_encode($this->getSession()->getAttribut('tentatives')));
                    }


                }
                else {
                    if($attempt_count > 0){
                        setcookie('login_count', $attempt_count + 1, time()+(5*60));
                    }
                    else{
                        setcookie('login_count', 1, time()+(5*60));
                    }
                    if (!empty($id))
                        $this->rediriger('home', 'index/' . htmlspecialchars($id[0]) . '/' . base64_encode('noOK').'/'.base64_encode($attempt_count));
                    else
                        $this->rediriger('home', 'index/fr/' . base64_encode('noOK').'/'.base64_encode($attempt_count));
                }
                // }

            }
            else {
                if($attempt_count > 0){
                    setcookie('login_count', $attempt_count + 1, time()+(5*60));
                }
                else{
                    setcookie('login_count', 1, time()+(5*60));
                }
                if (!empty($id))
                    $this->rediriger('home', 'index/' . $id[0] . '/' . base64_encode('NONO').'/'.base64_encode($this->getSession()->getAttribut('tentatives')));
                else
                    $this->rediriger('home', 'index/fr/' . base64_encode('NONO').'/'.base64_encode($this->getSession()->getAttribut('tentatives')));
            }
        }

        /*}
        else {
            //echo 12; die;
            if (!empty($id))
                $this->rediriger('home', 'index/' . $id[0] . '/' . base64_encode('NONO2'));
            else
                $this->rediriger('home', 'index/fr/' . base64_encode('NONO2'));
        }*/

    //}

    /**********************************************************************************************************************************************/
    /*
     * Fonction de deconnexionvpc_ReturnAuthResponseData
    */
    public function deconnecter()
    {

        if($this->utils->check_valid('post')) {
            $this->utilsateurModel->dropDejaConnecter($this->utils->securite_xss($_POST['login']));
            $this->getSession()->destroySession();
            header('Location: ' . ROOT . 'home');
            exit();
        }
        

    }

    public function test()
    {

        if($this->utils->check_valid('post')) {
            $this->utilsateurModel->dropDejaConnecter($this->utils->securite_xss($_POST['login']));
            $this->getSession()->destroySession();
            header('Location: ' . ROOT . 'home');
            exit();
        }


    }

}